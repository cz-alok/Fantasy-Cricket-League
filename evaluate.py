# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'evaluate.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


from score import Ui_Dialog as Score  
import sqlite3
mth= sqlite3.connect("CricketFantasyLeague.db")
cur_mth=mth.cursor()

class Ui_Evaluate(object):
    
    def __init__(self):  
        self.scoreDialog = QtWidgets.QMainWindow()
        self.score_screen = Score()
        self.score_screen.setupUi(self.scoreDialog)
        

    def setupUi(self, Evaluate):
        Evaluate.setObjectName("Evaluate")
        Evaluate.resize(725, 668)
        Evaluate.setStyleSheet("background-color: rgb(255, 170, 255);\n"
"background-color: rgb(216, 144, 0);\n"
"background-color: rgb(255, 170, 0);\n"
"background-color: rgb(226, 150, 112);\n"
"background-color: rgb(200, 133, 99);")
        self.centralwidget = QtWidgets.QWidget(Evaluate)
        self.centralwidget.setObjectName("centralwidget")
        self.cb_select_team = QtWidgets.QComboBox(self.centralwidget)
        self.cb_select_team.setGeometry(QtCore.QRect(80, 120, 171, 22))
        self.cb_select_team.setStyleSheet("background-color: rgb(193, 193, 193);")
        self.cb_select_team.setObjectName("cb_select_team")
        self.cb_select_team.addItem("")
        self.cb_select_match = QtWidgets.QComboBox(self.centralwidget)
        self.cb_select_match.setGeometry(QtCore.QRect(430, 120, 171, 22))
        self.cb_select_match.setStyleSheet("background-color: rgb(193, 193, 193);\n"
"")
        self.cb_select_match.setObjectName("cb_select_match")
        self.cb_select_match.addItem("")
        self.cb_select_match.addItem("")
        self.cb_select_match.addItem("")
        self.cb_select_match.addItem("")
        self.cb_select_match.addItem("")
        self.line = QtWidgets.QFrame(self.centralwidget)
        self.line.setGeometry(QtCore.QRect(40, 180, 621, 16))
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.calculate_btn = QtWidgets.QPushButton(self.centralwidget)
        self.calculate_btn.setGeometry(QtCore.QRect(270, 620, 151, 28))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.calculate_btn.setFont(font)
        self.calculate_btn.setObjectName("calculate_btn")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(60, 220, 71, 16))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(10)
        font.setBold(True)
        font.setItalic(True)
        font.setWeight(75)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(430, 220, 55, 16))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(10)
        font.setBold(True)
        font.setItalic(True)
        font.setWeight(75)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.scores_list = QtWidgets.QListWidget(self.centralwidget)
        self.scores_list.setGeometry(QtCore.QRect(420, 260, 241, 321))
        self.scores_list.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.scores_list.setObjectName("scores_list")
        self.players_list = QtWidgets.QListWidget(self.centralwidget)
        self.players_list.setGeometry(QtCore.QRect(50, 260, 241, 321))
        self.players_list.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.players_list.setObjectName("players_list")
        self.verticalScrollBar = QtWidgets.QScrollBar(self.centralwidget)
        self.verticalScrollBar.setGeometry(QtCore.QRect(280, 260, 16, 321))
        self.verticalScrollBar.setOrientation(QtCore.Qt.Vertical)
        self.verticalScrollBar.setObjectName("verticalScrollBar")
        self.verticalScrollBar1 = QtWidgets.QScrollBar(self.centralwidget)
        self.verticalScrollBar1.setGeometry(QtCore.QRect(650, 260, 16, 321))
        self.verticalScrollBar1.setOrientation(QtCore.Qt.Vertical)
        self.verticalScrollBar1.setObjectName("verticalScrollBar1")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(40, 20, 651, 51))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(16)
        font.setBold(True)
        font.setItalic(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.points_show = QtWidgets.QLabel(self.centralwidget)
        self.points_show.setGeometry(QtCore.QRect(510, 220, 71, 21))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(10)
        font.setBold(True)
        font.setItalic(True)
        font.setWeight(75)
        self.points_show.setFont(font)
        self.points_show.setStyleSheet("color : rgb(255, 0, 0);\n"
"background-color: rgb(229, 229, 229);\n"
"background-color: rgb(241, 241, 241);")
        self.points_show.setAlignment(QtCore.Qt.AlignCenter)
        self.points_show.setObjectName("points_show")
        Evaluate.setCentralWidget(self.centralwidget)

        self.retranslateUi(Evaluate)
        QtCore.QMetaObject.connectSlotsByName(Evaluate)

        self.calculate_btn.clicked.connect(self.final_score)
        selected_team = self.cb_select_team.currentText()

        self.changedname(selected_team)
        self.cb_select_team.currentTextChanged.connect(self.changedname)



    def retranslateUi(self, Evaluate):
        _translate = QtCore.QCoreApplication.translate
        Evaluate.setWindowTitle(_translate("Evaluate", "DialogBox"))
        self.cb_select_team.setItemText(0, _translate("Evaluate", "SELECT TEAM"))
        self.cb_select_match.setItemText(0, _translate("Evaluate", "Match 1"))
        self.cb_select_match.setItemText(1, _translate("Evaluate", "Match 2"))
        self.cb_select_match.setItemText(2, _translate("Evaluate", "Match 3"))
        self.cb_select_match.setItemText(3, _translate("Evaluate", "Match 4"))
        self.cb_select_match.setItemText(4, _translate("Evaluate", "Match 5"))
        self.calculate_btn.setText(_translate("Evaluate", "Evaluate Score"))
        self.label_2.setText(_translate("Evaluate", "Players"))
        self.label_3.setText(_translate("Evaluate", "Points"))
        self.label.setText(_translate("Evaluate", "Evaluate the Performance of your Fantasy Team"))
        self.points_show.setText(_translate("Evaluate", "##"))


        a=cur_mth.execute("SELECT  DISTINCT Name from teams;")
        tm=a.fetchall()
        for i in tm:
            self.cb_select_team.addItem(i[0])
    
        
    def changedname(self, t):
        self.players_list.clear()
        self.scores_list.clear()
        y = cur_mth.execute("SELECT Players from teams WHERE Name='" + t + "';")
        player = y.fetchall()
        
        for j in player:
            self.players_list.addItem(j[0])
        z = cur_mth.execute("SELECT Value from teams WHERE Name='" + t + "';")
        value = z.fetchall()
        for k in value:
            self.scores_list.addItem(str(k[0]))


    def final_score(self):
        total_score=0
        t=self.cb_select_team.currentText()   
        
        z = cur_mth.execute("SELECT Value from teams WHERE Name='" + t + "';")
        value = z.fetchall()
       
        for k in value:
            total_score+=k[0]
        # Opening Dialog box  For  Final Score
        self.score_screen.final_score.setText(str(total_score))  
        self.scoreDialog.show()
        self.points_show.setText(str(total_score))
     




if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Evaluate = QtWidgets.QMainWindow()
    ui = Ui_Evaluate()
    ui.setupUi(Evaluate)
    Evaluate.show()
    sys.exit(app.exec_())
